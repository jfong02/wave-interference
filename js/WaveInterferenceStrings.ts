// Copyright 2021-2022, University of Colorado Boulder

/**
 * Auto-generated from modulify, DO NOT manually modify.
 */
/* eslint-disable */
import getStringModule from '../../chipper/js/getStringModule.js';
import TReadOnlyProperty from '../../axon/js/TReadOnlyProperty.js';
import waveInterference from './waveInterference.js';

type StringsType = {
  'wave-interference': {
    'title': string;
    'titleStringProperty': TReadOnlyProperty<string>;
  };
  'screen': {
    'waves': string;
    'wavesStringProperty': TReadOnlyProperty<string>;
    'interference': string;
    'interferenceStringProperty': TReadOnlyProperty<string>;
    'slits': string;
    'slitsStringProperty': TReadOnlyProperty<string>;
    'diffraction': string;
    'diffractionStringProperty': TReadOnlyProperty<string>;
  };
  'frequency': string;
  'frequencyStringProperty': TReadOnlyProperty<string>;
  'diameter': string;
  'diameterStringProperty': TReadOnlyProperty<string>;
  'eccentricity': string;
  'eccentricityStringProperty': TReadOnlyProperty<string>;
  'amplitude': string;
  'amplitudeStringProperty': TReadOnlyProperty<string>;
  'graph': string;
  'graphStringProperty': TReadOnlyProperty<string>;
  'waterLevel': string;
  'waterLevelStringProperty': TReadOnlyProperty<string>;
  'waterLevelAtCenter': string;
  'waterLevelAtCenterStringProperty': TReadOnlyProperty<string>;
  'pressure': string;
  'pressureStringProperty': TReadOnlyProperty<string>;
  'electricField': string;
  'electricFieldStringProperty': TReadOnlyProperty<string>;
  'electricFieldAtCenter': string;
  'electricFieldAtCenterStringProperty': TReadOnlyProperty<string>;
  'playTone': string;
  'playToneStringProperty': TReadOnlyProperty<string>;
  'pressureAtCenter': string;
  'pressureAtCenterStringProperty': TReadOnlyProperty<string>;
  'positionCM': string;
  'positionCMStringProperty': TReadOnlyProperty<string>;
  'positionNM': string;
  'positionNMStringProperty': TReadOnlyProperty<string>;
  'cmValue': string;
  'cmValueStringProperty': TReadOnlyProperty<string>;
  'nmValue': string;
  'nmValueStringProperty': TReadOnlyProperty<string>;
  'mmValue': string;
  'mmValueStringProperty': TReadOnlyProperty<string>;
  'degreesValue': string;
  'degreesValueStringProperty': TReadOnlyProperty<string>;
  'min': string;
  'minStringProperty': TReadOnlyProperty<string>;
  'max': string;
  'maxStringProperty': TReadOnlyProperty<string>;
  'centimetersUnits': string;
  'centimetersUnitsStringProperty': TReadOnlyProperty<string>;
  'nanometersUnits': string;
  'nanometersUnitsStringProperty': TReadOnlyProperty<string>;
  'secondsUnits': string;
  'secondsUnitsStringProperty': TReadOnlyProperty<string>;
  'millisecondsUnits': string;
  'millisecondsUnitsStringProperty': TReadOnlyProperty<string>;
  'femtosecondsUnits': string;
  'femtosecondsUnitsStringProperty': TReadOnlyProperty<string>;
  'millisecondConversion': string;
  'millisecondConversionStringProperty': TReadOnlyProperty<string>;
  'femtosecondConversion': string;
  'femtosecondConversionStringProperty': TReadOnlyProperty<string>;
  'screenLabel': string;
  'screenLabelStringProperty': TReadOnlyProperty<string>;
  'intensity': string;
  'intensityStringProperty': TReadOnlyProperty<string>;
  'topView': string;
  'topViewStringProperty': TReadOnlyProperty<string>;
  'sideView': string;
  'sideViewStringProperty': TReadOnlyProperty<string>;
  'distanceUnits': string;
  'distanceUnitsStringProperty': TReadOnlyProperty<string>;
  'timeUnits': string;
  'timeUnitsStringProperty': TReadOnlyProperty<string>;
  'normal': string;
  'normalStringProperty': TReadOnlyProperty<string>;
  'slow': string;
  'slowStringProperty': TReadOnlyProperty<string>;
  'top': string;
  'topStringProperty': TReadOnlyProperty<string>;
  'separation': string;
  'separationStringProperty': TReadOnlyProperty<string>;
  'noBarrier': string;
  'noBarrierStringProperty': TReadOnlyProperty<string>;
  'oneSlit': string;
  'oneSlitStringProperty': TReadOnlyProperty<string>;
  'twoSlits': string;
  'twoSlitsStringProperty': TReadOnlyProperty<string>;
  'time': string;
  'timeStringProperty': TReadOnlyProperty<string>;
  'slitWidth': string;
  'slitWidthStringProperty': TReadOnlyProperty<string>;
  'width': string;
  'widthStringProperty': TReadOnlyProperty<string>;
  'height': string;
  'heightStringProperty': TReadOnlyProperty<string>;
  'circleDiameter': string;
  'circleDiameterStringProperty': TReadOnlyProperty<string>;
  'rotation': string;
  'rotationStringProperty': TReadOnlyProperty<string>;
  'squareWidth': string;
  'squareWidthStringProperty': TReadOnlyProperty<string>;
  'latticeSpacing': string;
  'latticeSpacingStringProperty': TReadOnlyProperty<string>;
  'disorder': string;
  'disorderStringProperty': TReadOnlyProperty<string>;
  'slitSeparation': string;
  'slitSeparationStringProperty': TReadOnlyProperty<string>;
  'waves': string;
  'wavesStringProperty': TReadOnlyProperty<string>;
  'particles': string;
  'particlesStringProperty': TReadOnlyProperty<string>;
  'both': string;
  'bothStringProperty': TReadOnlyProperty<string>;
  'waterWaveGenerator': string;
  'waterWaveGeneratorStringProperty': TReadOnlyProperty<string>;
  'soundGenerator': string;
  'soundGeneratorStringProperty': TReadOnlyProperty<string>;
  'lightGenerator': string;
  'lightGeneratorStringProperty': TReadOnlyProperty<string>;
  'soundEffect': string;
  'soundEffectStringProperty': TReadOnlyProperty<string>;
  'none': string;
  'noneStringProperty': TReadOnlyProperty<string>;
  'lots': string;
  'lotsStringProperty': TReadOnlyProperty<string>;
};

const WaveInterferenceStrings = getStringModule( 'WAVE_INTERFERENCE' ) as StringsType;

waveInterference.register( 'WaveInterferenceStrings', WaveInterferenceStrings );

export default WaveInterferenceStrings;
