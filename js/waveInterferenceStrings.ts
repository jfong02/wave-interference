// Copyright 2021-2022, University of Colorado Boulder

/**
 * Auto-generated from modulify, DO NOT manually modify.
 */
/* eslint-disable */
import getStringModule from '../../chipper/js/getStringModule.js';
import TReadOnlyProperty from '../../axon/js/TReadOnlyProperty.js';
import waveInterference from './waveInterference.js';

type StringsType = {
  'wave-interference': {
    'title': string;
    'titleProperty': TReadOnlyProperty<string>;
  };
  'screen': {
    'waves': string;
    'wavesProperty': TReadOnlyProperty<string>;
    'interference': string;
    'interferenceProperty': TReadOnlyProperty<string>;
    'slits': string;
    'slitsProperty': TReadOnlyProperty<string>;
    'diffraction': string;
    'diffractionProperty': TReadOnlyProperty<string>;
  };
  'frequency': string;
  'frequencyProperty': TReadOnlyProperty<string>;
  'diameter': string;
  'diameterProperty': TReadOnlyProperty<string>;
  'eccentricity': string;
  'eccentricityProperty': TReadOnlyProperty<string>;
  'amplitude': string;
  'amplitudeProperty': TReadOnlyProperty<string>;
  'graph': string;
  'graphProperty': TReadOnlyProperty<string>;
  'waterLevel': string;
  'waterLevelProperty': TReadOnlyProperty<string>;
  'waterLevelAtCenter': string;
  'waterLevelAtCenterProperty': TReadOnlyProperty<string>;
  'pressure': string;
  'pressureProperty': TReadOnlyProperty<string>;
  'electricField': string;
  'electricFieldProperty': TReadOnlyProperty<string>;
  'electricFieldAtCenter': string;
  'electricFieldAtCenterProperty': TReadOnlyProperty<string>;
  'playTone': string;
  'playToneProperty': TReadOnlyProperty<string>;
  'pressureAtCenter': string;
  'pressureAtCenterProperty': TReadOnlyProperty<string>;
  'positionCM': string;
  'positionCMProperty': TReadOnlyProperty<string>;
  'positionNM': string;
  'positionNMProperty': TReadOnlyProperty<string>;
  'cmValue': string;
  'cmValueProperty': TReadOnlyProperty<string>;
  'nmValue': string;
  'nmValueProperty': TReadOnlyProperty<string>;
  'mmValue': string;
  'mmValueProperty': TReadOnlyProperty<string>;
  'degreesValue': string;
  'degreesValueProperty': TReadOnlyProperty<string>;
  'min': string;
  'minProperty': TReadOnlyProperty<string>;
  'max': string;
  'maxProperty': TReadOnlyProperty<string>;
  'centimetersUnits': string;
  'centimetersUnitsProperty': TReadOnlyProperty<string>;
  'nanometersUnits': string;
  'nanometersUnitsProperty': TReadOnlyProperty<string>;
  'secondsUnits': string;
  'secondsUnitsProperty': TReadOnlyProperty<string>;
  'millisecondsUnits': string;
  'millisecondsUnitsProperty': TReadOnlyProperty<string>;
  'femtosecondsUnits': string;
  'femtosecondsUnitsProperty': TReadOnlyProperty<string>;
  'millisecondConversion': string;
  'millisecondConversionProperty': TReadOnlyProperty<string>;
  'femtosecondConversion': string;
  'femtosecondConversionProperty': TReadOnlyProperty<string>;
  'screenLabel': string;
  'screenLabelProperty': TReadOnlyProperty<string>;
  'intensity': string;
  'intensityProperty': TReadOnlyProperty<string>;
  'topView': string;
  'topViewProperty': TReadOnlyProperty<string>;
  'sideView': string;
  'sideViewProperty': TReadOnlyProperty<string>;
  'distanceUnits': string;
  'distanceUnitsProperty': TReadOnlyProperty<string>;
  'timeUnits': string;
  'timeUnitsProperty': TReadOnlyProperty<string>;
  'normal': string;
  'normalProperty': TReadOnlyProperty<string>;
  'slow': string;
  'slowProperty': TReadOnlyProperty<string>;
  'top': string;
  'topProperty': TReadOnlyProperty<string>;
  'separation': string;
  'separationProperty': TReadOnlyProperty<string>;
  'noBarrier': string;
  'noBarrierProperty': TReadOnlyProperty<string>;
  'oneSlit': string;
  'oneSlitProperty': TReadOnlyProperty<string>;
  'twoSlits': string;
  'twoSlitsProperty': TReadOnlyProperty<string>;
  'time': string;
  'timeProperty': TReadOnlyProperty<string>;
  'slitWidth': string;
  'slitWidthProperty': TReadOnlyProperty<string>;
  'width': string;
  'widthProperty': TReadOnlyProperty<string>;
  'height': string;
  'heightProperty': TReadOnlyProperty<string>;
  'circleDiameter': string;
  'circleDiameterProperty': TReadOnlyProperty<string>;
  'rotation': string;
  'rotationProperty': TReadOnlyProperty<string>;
  'squareWidth': string;
  'squareWidthProperty': TReadOnlyProperty<string>;
  'latticeSpacing': string;
  'latticeSpacingProperty': TReadOnlyProperty<string>;
  'disorder': string;
  'disorderProperty': TReadOnlyProperty<string>;
  'slitSeparation': string;
  'slitSeparationProperty': TReadOnlyProperty<string>;
  'waves': string;
  'wavesProperty': TReadOnlyProperty<string>;
  'particles': string;
  'particlesProperty': TReadOnlyProperty<string>;
  'both': string;
  'bothProperty': TReadOnlyProperty<string>;
  'waterWaveGenerator': string;
  'waterWaveGeneratorProperty': TReadOnlyProperty<string>;
  'soundGenerator': string;
  'soundGeneratorProperty': TReadOnlyProperty<string>;
  'lightGenerator': string;
  'lightGeneratorProperty': TReadOnlyProperty<string>;
  'soundEffect': string;
  'soundEffectProperty': TReadOnlyProperty<string>;
  'none': string;
  'noneProperty': TReadOnlyProperty<string>;
  'lots': string;
  'lotsProperty': TReadOnlyProperty<string>;
};

const waveInterferenceStrings = getStringModule( 'WAVE_INTERFERENCE' ) as StringsType;

waveInterference.register( 'waveInterferenceStrings', waveInterferenceStrings );

export default waveInterferenceStrings;
